<?xml version="1.0" encoding="UTF-8"?>

<project name="Sender_DB" default="full-build">

	<property name="phpcs"   value="phpcs"/>
	<property name="phpcpd"  value="phpcpd"/>
	<property name="phpdox"  value="phpdox"/>
	<property name="phploc"  value="phploc"/>
	<property name="phpmd"   value="phpmd"/>
	 
	<target name="full-build"
			depends="prepare,static-analysis,phpdox"
			description="Performs static analysis, runs the tests, and generates project documentation"/>

			 
	<target name="static-analysis"
			depends="phpcs-ci, phploc-ci,phpmd-ci,phpcpd-ci"
			description="Performs static analysis"/>

			 
	<target name="clean"
			unless="clean.done"
			description="Cleanup build artifacts">
		<delete dir="${basedir}/build/logs"/>
		<property name="clean.done" value="true"/>
	</target>

	<target name="prepare"
			unless="prepare.done"
			depends="clean"
			description="Prepare for build">
		<mkdir dir="${basedir}/build/logs"/>
		<property name="prepare.done" value="true"/>
	</target>
			 

	<target name="phpcs-ci"
			 unless="phpcs.done"
			 depends="prepare"
			 description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="${phpcs}" output="/dev/null" taskname="phpcs">
	   <arg value="--report=checkstyle" />
	   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
	   <arg value="--standard=PSR2" />
	   <arg value="--extensions=php" />
	   <arg value="--ignore=autoload.php" />
	   <arg path="${basedir}/views" />
	   <arg path="${basedir}/models" />
	   <arg path="${basedir}/controllers" />
	  </exec>

	  <property name="phpcs.done" value="true"/>
	 </target>
	 
	 <target name="phpmd-ci"
			 unless="phpmd.done"
			 depends="prepare"
			 description="Perform project mess detection using PHPMD and log result in XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="${phpmd}" taskname="phpmd">
	   <arg path="${basedir}/views" />
	   <arg path="${basedir}/models" />
	   <arg path="${basedir}/controllers" />
	   <arg value="xml" />
	   <arg path="${basedir}/build/phpmd.xml" />
	   <arg value="--reportfile" />
	   <arg path="${basedir}/build/logs/pmd.xml" />
	  </exec>

	  <property name="phpmd.done" value="true"/>
	 </target>
	 
	 <target name="phpcpd-ci"
			 unless="phpcpd.done"
			 depends="prepare"
			 description="Find duplicate code using PHPCPD and log result in XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="${phpcpd}" taskname="phpcpd">
	   <arg value="--log-pmd" />
	   <arg path="${basedir}/build/logs/pmd-cpd.xml" />
	   <arg path="${basedir}/views" />
	   <arg path="${basedir}/models" />
	   <arg path="${basedir}/controllers" />
	  </exec>

	  <property name="phpcpd.done" value="true"/>
	 </target>
	 

	 <target name="phploc-ci"
			 unless="phploc.done"
			 depends="prepare"
			 description="Measure project size using PHPLOC and log result in CSV and XML format. Intended for usage within a continuous integration environment.">
	  <exec executable="${phploc}" taskname="phploc">
	   <arg value="--count-tests" />
	   <arg value="--log-csv" />
	   <arg path="${basedir}/build/logs/phploc.csv" />
	   <arg value="--log-xml" />
	   <arg path="${basedir}/build/logs/phploc.xml" />
	   <arg path="${basedir}/views" />
	   <arg path="${basedir}/models" />
	   <arg path="${basedir}/controllers" />
	  </exec>

	  <property name="phploc.done" value="true"/>
	 </target>
	 
	  <target name="phpdox"
			 unless="phpdox.done"
			 depends="phploc-ci,phpcs-ci,phpmd-ci"
			 description="Generate project documentation using phpDox">
	  <exec executable="${phpdox}" dir="${basedir}/build" taskname="phpdox"/>

	  <property name="phpdox.done" value="true"/>
	 </target>
	 
</project>